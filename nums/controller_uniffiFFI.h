// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!

#pragma once

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

// The following structs are used to implement the lowest level
// of the FFI, and thus useful to multiple uniffied crates.
// We ensure they are declared exactly once, with a header guard, UNIFFI_SHARED_H.
#ifdef UNIFFI_SHARED_H
    // We also try to prevent mixing versions of shared uniffi header structs.
    // If you add anything to the #else block, you must increment the version suffix in UNIFFI_SHARED_HEADER_V4
    #ifndef UNIFFI_SHARED_HEADER_V4
        #error Combining helper code from multiple versions of uniffi is not supported
    #endif // ndef UNIFFI_SHARED_HEADER_V4
#else
#define UNIFFI_SHARED_H
#define UNIFFI_SHARED_HEADER_V4
// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️

typedef struct RustBuffer
{
    uint64_t capacity;
    uint64_t len;
    uint8_t *_Nullable data;
} RustBuffer;

typedef struct ForeignBytes
{
    int32_t len;
    const uint8_t *_Nullable data;
} ForeignBytes;

// Error definitions
typedef struct RustCallStatus {
    int8_t code;
    RustBuffer errorBuf;
} RustCallStatus;

// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️
#endif // def UNIFFI_SHARED_H
#ifndef UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
#define UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
typedef void (*UniffiRustFutureContinuationCallback)(uint64_t, int8_t
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_DROPPED_CALLBACK
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_DROPPED_CALLBACK
typedef void (*UniffiForeignFutureDroppedCallback)(uint64_t
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
typedef void (*UniffiCallbackInterfaceFree)(uint64_t
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_CLONE
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_CLONE
typedef uint64_t (*UniffiCallbackInterfaceClone)(uint64_t
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_DROPPED_CALLBACK_STRUCT
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_DROPPED_CALLBACK_STRUCT
typedef struct UniffiForeignFutureDroppedCallbackStruct {
    uint64_t handle;
    UniffiForeignFutureDroppedCallback _Nonnull free;
} UniffiForeignFutureDroppedCallbackStruct;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U8
typedef struct UniffiForeignFutureResultU8 {
    uint8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultU8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
typedef void (*UniffiForeignFutureCompleteU8)(uint64_t, UniffiForeignFutureResultU8
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I8
typedef struct UniffiForeignFutureResultI8 {
    int8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultI8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
typedef void (*UniffiForeignFutureCompleteI8)(uint64_t, UniffiForeignFutureResultI8
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U16
typedef struct UniffiForeignFutureResultU16 {
    uint16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultU16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
typedef void (*UniffiForeignFutureCompleteU16)(uint64_t, UniffiForeignFutureResultU16
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I16
typedef struct UniffiForeignFutureResultI16 {
    int16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultI16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
typedef void (*UniffiForeignFutureCompleteI16)(uint64_t, UniffiForeignFutureResultI16
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U32
typedef struct UniffiForeignFutureResultU32 {
    uint32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultU32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
typedef void (*UniffiForeignFutureCompleteU32)(uint64_t, UniffiForeignFutureResultU32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I32
typedef struct UniffiForeignFutureResultI32 {
    int32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultI32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
typedef void (*UniffiForeignFutureCompleteI32)(uint64_t, UniffiForeignFutureResultI32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U64
typedef struct UniffiForeignFutureResultU64 {
    uint64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultU64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
typedef void (*UniffiForeignFutureCompleteU64)(uint64_t, UniffiForeignFutureResultU64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I64
typedef struct UniffiForeignFutureResultI64 {
    int64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultI64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
typedef void (*UniffiForeignFutureCompleteI64)(uint64_t, UniffiForeignFutureResultI64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_F32
typedef struct UniffiForeignFutureResultF32 {
    float returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultF32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
typedef void (*UniffiForeignFutureCompleteF32)(uint64_t, UniffiForeignFutureResultF32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_F64
typedef struct UniffiForeignFutureResultF64 {
    double returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultF64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
typedef void (*UniffiForeignFutureCompleteF64)(uint64_t, UniffiForeignFutureResultF64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_RUST_BUFFER
typedef struct UniffiForeignFutureResultRustBuffer {
    RustBuffer returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultRustBuffer;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
typedef void (*UniffiForeignFutureCompleteRustBuffer)(uint64_t, UniffiForeignFutureResultRustBuffer
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_VOID
typedef struct UniffiForeignFutureResultVoid {
    RustCallStatus callStatus;
} UniffiForeignFutureResultVoid;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
typedef void (*UniffiForeignFutureCompleteVoid)(uint64_t, UniffiForeignFutureResultVoid
    );

#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_CLONE_CONTROLLERACCOUNT
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_CLONE_CONTROLLERACCOUNT
uint64_t uniffi_controller_uniffi_fn_clone_controlleraccount(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_FREE_CONTROLLERACCOUNT
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_FREE_CONTROLLERACCOUNT
void uniffi_controller_uniffi_fn_free_controlleraccount(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_CONSTRUCTOR_CONTROLLERACCOUNT_FROM_STORAGE
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_CONSTRUCTOR_CONTROLLERACCOUNT_FROM_STORAGE
uint64_t uniffi_controller_uniffi_fn_constructor_controlleraccount_from_storage(RustBuffer app_id, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_CONSTRUCTOR_CONTROLLERACCOUNT_NEW
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_CONSTRUCTOR_CONTROLLERACCOUNT_NEW
uint64_t uniffi_controller_uniffi_fn_constructor_controlleraccount_new(RustBuffer app_id, RustBuffer username, RustBuffer class_hash, RustBuffer rpc_url, uint64_t owner, RustBuffer address, RustBuffer chain_id, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_CONSTRUCTOR_CONTROLLERACCOUNT_NEW_HEADLESS
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_CONSTRUCTOR_CONTROLLERACCOUNT_NEW_HEADLESS
uint64_t uniffi_controller_uniffi_fn_constructor_controlleraccount_new_headless(RustBuffer app_id, RustBuffer username, RustBuffer class_hash, RustBuffer rpc_url, uint64_t owner, RustBuffer chain_id, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_ADDRESS
RustBuffer uniffi_controller_uniffi_fn_method_controlleraccount_address(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_APP_ID
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_APP_ID
RustBuffer uniffi_controller_uniffi_fn_method_controlleraccount_app_id(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_CHAIN_ID
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_CHAIN_ID
RustBuffer uniffi_controller_uniffi_fn_method_controlleraccount_chain_id(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_CLEAR_LAST_ERROR
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_CLEAR_LAST_ERROR
void uniffi_controller_uniffi_fn_method_controlleraccount_clear_last_error(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_DELEGATE_ACCOUNT
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_DELEGATE_ACCOUNT
RustBuffer uniffi_controller_uniffi_fn_method_controlleraccount_delegate_account(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_DISCONNECT
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_DISCONNECT
void uniffi_controller_uniffi_fn_method_controlleraccount_disconnect(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_ERROR_MESSAGE
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_ERROR_MESSAGE
RustBuffer uniffi_controller_uniffi_fn_method_controlleraccount_error_message(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_EXECUTE
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_EXECUTE
RustBuffer uniffi_controller_uniffi_fn_method_controlleraccount_execute(uint64_t ptr, RustBuffer calls, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_SIGNUP
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_SIGNUP
void uniffi_controller_uniffi_fn_method_controlleraccount_signup(uint64_t ptr, RustBuffer signer_type, RustBuffer session_expiration, RustBuffer cartridge_api_url, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_SWITCH_CHAIN
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_SWITCH_CHAIN
void uniffi_controller_uniffi_fn_method_controlleraccount_switch_chain(uint64_t ptr, RustBuffer rpc_url, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_TRANSFER
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_TRANSFER
RustBuffer uniffi_controller_uniffi_fn_method_controlleraccount_transfer(uint64_t ptr, RustBuffer recipient, RustBuffer amount, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_USERNAME
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_CONTROLLERACCOUNT_USERNAME
RustBuffer uniffi_controller_uniffi_fn_method_controlleraccount_username(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_CLONE_OWNER
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_CLONE_OWNER
uint64_t uniffi_controller_uniffi_fn_clone_owner(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_FREE_OWNER
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_FREE_OWNER
void uniffi_controller_uniffi_fn_free_owner(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_CONSTRUCTOR_OWNER_NEW
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_CONSTRUCTOR_OWNER_NEW
uint64_t uniffi_controller_uniffi_fn_constructor_owner_new(RustBuffer private_key, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_CLONE_SESSIONACCOUNT
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_CLONE_SESSIONACCOUNT
uint64_t uniffi_controller_uniffi_fn_clone_sessionaccount(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_FREE_SESSIONACCOUNT
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_FREE_SESSIONACCOUNT
void uniffi_controller_uniffi_fn_free_sessionaccount(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_CONSTRUCTOR_SESSIONACCOUNT_CREATE_FROM_SUBSCRIBE
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_CONSTRUCTOR_SESSIONACCOUNT_CREATE_FROM_SUBSCRIBE
uint64_t uniffi_controller_uniffi_fn_constructor_sessionaccount_create_from_subscribe(RustBuffer private_key, RustBuffer policies, RustBuffer rpc_url, RustBuffer cartridge_api_url, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_CONSTRUCTOR_SESSIONACCOUNT_NEW
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_CONSTRUCTOR_SESSIONACCOUNT_NEW
uint64_t uniffi_controller_uniffi_fn_constructor_sessionaccount_new(RustBuffer rpc_url, RustBuffer private_key, RustBuffer address, RustBuffer owner_guid, RustBuffer chain_id, RustBuffer policies, uint64_t session_expiration, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_ADDRESS
RustBuffer uniffi_controller_uniffi_fn_method_sessionaccount_address(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_APP_ID
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_APP_ID
RustBuffer uniffi_controller_uniffi_fn_method_sessionaccount_app_id(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_CHAIN_ID
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_CHAIN_ID
RustBuffer uniffi_controller_uniffi_fn_method_sessionaccount_chain_id(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_EXECUTE
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_EXECUTE
RustBuffer uniffi_controller_uniffi_fn_method_sessionaccount_execute(uint64_t ptr, RustBuffer calls, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_EXECUTE_FROM_OUTSIDE
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_EXECUTE_FROM_OUTSIDE
RustBuffer uniffi_controller_uniffi_fn_method_sessionaccount_execute_from_outside(uint64_t ptr, RustBuffer calls, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_EXPIRES_AT
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_EXPIRES_AT
uint64_t uniffi_controller_uniffi_fn_method_sessionaccount_expires_at(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_IS_EXPIRED
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_IS_EXPIRED
int8_t uniffi_controller_uniffi_fn_method_sessionaccount_is_expired(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_IS_REVOKED
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_IS_REVOKED
int8_t uniffi_controller_uniffi_fn_method_sessionaccount_is_revoked(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_OWNER_GUID
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_OWNER_GUID
RustBuffer uniffi_controller_uniffi_fn_method_sessionaccount_owner_guid(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_SESSION_ID
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_SESSION_ID
RustBuffer uniffi_controller_uniffi_fn_method_sessionaccount_session_id(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_USERNAME
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_METHOD_SESSIONACCOUNT_USERNAME
RustBuffer uniffi_controller_uniffi_fn_method_sessionaccount_username(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_FUNC_CONTROLLER_HAS_STORAGE
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_FUNC_CONTROLLER_HAS_STORAGE
int8_t uniffi_controller_uniffi_fn_func_controller_has_storage(RustBuffer app_id, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_FUNC_GET_CONTROLLER_CLASS_HASH
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_FUNC_GET_CONTROLLER_CLASS_HASH
RustBuffer uniffi_controller_uniffi_fn_func_get_controller_class_hash(RustBuffer version, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_FUNC_GET_PUBLIC_KEY
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_FUNC_GET_PUBLIC_KEY
RustBuffer uniffi_controller_uniffi_fn_func_get_public_key(RustBuffer private_key, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_FUNC_SIGNER_TO_GUID
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_FUNC_SIGNER_TO_GUID
RustBuffer uniffi_controller_uniffi_fn_func_signer_to_guid(RustBuffer private_key, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_FUNC_VALIDATE_FELT
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_FN_FUNC_VALIDATE_FELT
int8_t uniffi_controller_uniffi_fn_func_validate_felt(RustBuffer felt, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUSTBUFFER_ALLOC
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUSTBUFFER_ALLOC
RustBuffer ffi_controller_uniffi_rustbuffer_alloc(uint64_t size, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUSTBUFFER_FROM_BYTES
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUSTBUFFER_FROM_BYTES
RustBuffer ffi_controller_uniffi_rustbuffer_from_bytes(ForeignBytes bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUSTBUFFER_FREE
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUSTBUFFER_FREE
void ffi_controller_uniffi_rustbuffer_free(RustBuffer buf, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUSTBUFFER_RESERVE
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUSTBUFFER_RESERVE
RustBuffer ffi_controller_uniffi_rustbuffer_reserve(RustBuffer buf, uint64_t additional, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_U8
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_U8
void ffi_controller_uniffi_rust_future_poll_u8(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_U8
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_U8
void ffi_controller_uniffi_rust_future_cancel_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_U8
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_U8
void ffi_controller_uniffi_rust_future_free_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_U8
uint8_t ffi_controller_uniffi_rust_future_complete_u8(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_I8
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_I8
void ffi_controller_uniffi_rust_future_poll_i8(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_I8
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_I8
void ffi_controller_uniffi_rust_future_cancel_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_I8
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_I8
void ffi_controller_uniffi_rust_future_free_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_I8
int8_t ffi_controller_uniffi_rust_future_complete_i8(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_U16
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_U16
void ffi_controller_uniffi_rust_future_poll_u16(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_U16
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_U16
void ffi_controller_uniffi_rust_future_cancel_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_U16
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_U16
void ffi_controller_uniffi_rust_future_free_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_U16
uint16_t ffi_controller_uniffi_rust_future_complete_u16(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_I16
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_I16
void ffi_controller_uniffi_rust_future_poll_i16(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_I16
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_I16
void ffi_controller_uniffi_rust_future_cancel_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_I16
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_I16
void ffi_controller_uniffi_rust_future_free_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_I16
int16_t ffi_controller_uniffi_rust_future_complete_i16(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_U32
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_U32
void ffi_controller_uniffi_rust_future_poll_u32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_U32
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_U32
void ffi_controller_uniffi_rust_future_cancel_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_U32
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_U32
void ffi_controller_uniffi_rust_future_free_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_U32
uint32_t ffi_controller_uniffi_rust_future_complete_u32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_I32
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_I32
void ffi_controller_uniffi_rust_future_poll_i32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_I32
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_I32
void ffi_controller_uniffi_rust_future_cancel_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_I32
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_I32
void ffi_controller_uniffi_rust_future_free_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_I32
int32_t ffi_controller_uniffi_rust_future_complete_i32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_U64
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_U64
void ffi_controller_uniffi_rust_future_poll_u64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_U64
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_U64
void ffi_controller_uniffi_rust_future_cancel_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_U64
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_U64
void ffi_controller_uniffi_rust_future_free_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_U64
uint64_t ffi_controller_uniffi_rust_future_complete_u64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_I64
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_I64
void ffi_controller_uniffi_rust_future_poll_i64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_I64
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_I64
void ffi_controller_uniffi_rust_future_cancel_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_I64
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_I64
void ffi_controller_uniffi_rust_future_free_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_I64
int64_t ffi_controller_uniffi_rust_future_complete_i64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_F32
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_F32
void ffi_controller_uniffi_rust_future_poll_f32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_F32
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_F32
void ffi_controller_uniffi_rust_future_cancel_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_F32
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_F32
void ffi_controller_uniffi_rust_future_free_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_F32
float ffi_controller_uniffi_rust_future_complete_f32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_F64
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_F64
void ffi_controller_uniffi_rust_future_poll_f64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_F64
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_F64
void ffi_controller_uniffi_rust_future_cancel_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_F64
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_F64
void ffi_controller_uniffi_rust_future_free_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_F64
double ffi_controller_uniffi_rust_future_complete_f64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_RUST_BUFFER
void ffi_controller_uniffi_rust_future_poll_rust_buffer(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_RUST_BUFFER
void ffi_controller_uniffi_rust_future_cancel_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_RUST_BUFFER
void ffi_controller_uniffi_rust_future_free_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_RUST_BUFFER
RustBuffer ffi_controller_uniffi_rust_future_complete_rust_buffer(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_VOID
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_POLL_VOID
void ffi_controller_uniffi_rust_future_poll_void(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_VOID
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_CANCEL_VOID
void ffi_controller_uniffi_rust_future_cancel_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_VOID
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_FREE_VOID
void ffi_controller_uniffi_rust_future_free_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_RUST_FUTURE_COMPLETE_VOID
void ffi_controller_uniffi_rust_future_complete_void(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_FUNC_CONTROLLER_HAS_STORAGE
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_FUNC_CONTROLLER_HAS_STORAGE
uint16_t uniffi_controller_uniffi_checksum_func_controller_has_storage(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_FUNC_GET_CONTROLLER_CLASS_HASH
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_FUNC_GET_CONTROLLER_CLASS_HASH
uint16_t uniffi_controller_uniffi_checksum_func_get_controller_class_hash(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_FUNC_GET_PUBLIC_KEY
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_FUNC_GET_PUBLIC_KEY
uint16_t uniffi_controller_uniffi_checksum_func_get_public_key(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_FUNC_SIGNER_TO_GUID
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_FUNC_SIGNER_TO_GUID
uint16_t uniffi_controller_uniffi_checksum_func_signer_to_guid(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_FUNC_VALIDATE_FELT
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_FUNC_VALIDATE_FELT
uint16_t uniffi_controller_uniffi_checksum_func_validate_felt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_ADDRESS
uint16_t uniffi_controller_uniffi_checksum_method_controlleraccount_address(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_APP_ID
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_APP_ID
uint16_t uniffi_controller_uniffi_checksum_method_controlleraccount_app_id(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_CHAIN_ID
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_CHAIN_ID
uint16_t uniffi_controller_uniffi_checksum_method_controlleraccount_chain_id(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_CLEAR_LAST_ERROR
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_CLEAR_LAST_ERROR
uint16_t uniffi_controller_uniffi_checksum_method_controlleraccount_clear_last_error(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_DELEGATE_ACCOUNT
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_DELEGATE_ACCOUNT
uint16_t uniffi_controller_uniffi_checksum_method_controlleraccount_delegate_account(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_DISCONNECT
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_DISCONNECT
uint16_t uniffi_controller_uniffi_checksum_method_controlleraccount_disconnect(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_ERROR_MESSAGE
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_ERROR_MESSAGE
uint16_t uniffi_controller_uniffi_checksum_method_controlleraccount_error_message(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_EXECUTE
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_EXECUTE
uint16_t uniffi_controller_uniffi_checksum_method_controlleraccount_execute(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_SIGNUP
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_SIGNUP
uint16_t uniffi_controller_uniffi_checksum_method_controlleraccount_signup(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_SWITCH_CHAIN
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_SWITCH_CHAIN
uint16_t uniffi_controller_uniffi_checksum_method_controlleraccount_switch_chain(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_TRANSFER
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_TRANSFER
uint16_t uniffi_controller_uniffi_checksum_method_controlleraccount_transfer(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_USERNAME
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_CONTROLLERACCOUNT_USERNAME
uint16_t uniffi_controller_uniffi_checksum_method_controlleraccount_username(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_ADDRESS
uint16_t uniffi_controller_uniffi_checksum_method_sessionaccount_address(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_APP_ID
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_APP_ID
uint16_t uniffi_controller_uniffi_checksum_method_sessionaccount_app_id(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_CHAIN_ID
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_CHAIN_ID
uint16_t uniffi_controller_uniffi_checksum_method_sessionaccount_chain_id(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_EXECUTE
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_EXECUTE
uint16_t uniffi_controller_uniffi_checksum_method_sessionaccount_execute(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_EXECUTE_FROM_OUTSIDE
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_EXECUTE_FROM_OUTSIDE
uint16_t uniffi_controller_uniffi_checksum_method_sessionaccount_execute_from_outside(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_EXPIRES_AT
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_EXPIRES_AT
uint16_t uniffi_controller_uniffi_checksum_method_sessionaccount_expires_at(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_IS_EXPIRED
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_IS_EXPIRED
uint16_t uniffi_controller_uniffi_checksum_method_sessionaccount_is_expired(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_IS_REVOKED
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_IS_REVOKED
uint16_t uniffi_controller_uniffi_checksum_method_sessionaccount_is_revoked(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_OWNER_GUID
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_OWNER_GUID
uint16_t uniffi_controller_uniffi_checksum_method_sessionaccount_owner_guid(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_SESSION_ID
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_SESSION_ID
uint16_t uniffi_controller_uniffi_checksum_method_sessionaccount_session_id(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_USERNAME
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_METHOD_SESSIONACCOUNT_USERNAME
uint16_t uniffi_controller_uniffi_checksum_method_sessionaccount_username(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_CONSTRUCTOR_CONTROLLERACCOUNT_FROM_STORAGE
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_CONSTRUCTOR_CONTROLLERACCOUNT_FROM_STORAGE
uint16_t uniffi_controller_uniffi_checksum_constructor_controlleraccount_from_storage(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_CONSTRUCTOR_CONTROLLERACCOUNT_NEW
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_CONSTRUCTOR_CONTROLLERACCOUNT_NEW
uint16_t uniffi_controller_uniffi_checksum_constructor_controlleraccount_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_CONSTRUCTOR_CONTROLLERACCOUNT_NEW_HEADLESS
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_CONSTRUCTOR_CONTROLLERACCOUNT_NEW_HEADLESS
uint16_t uniffi_controller_uniffi_checksum_constructor_controlleraccount_new_headless(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_CONSTRUCTOR_OWNER_NEW
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_CONSTRUCTOR_OWNER_NEW
uint16_t uniffi_controller_uniffi_checksum_constructor_owner_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_CONSTRUCTOR_SESSIONACCOUNT_CREATE_FROM_SUBSCRIBE
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_CONSTRUCTOR_SESSIONACCOUNT_CREATE_FROM_SUBSCRIBE
uint16_t uniffi_controller_uniffi_checksum_constructor_sessionaccount_create_from_subscribe(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_CONSTRUCTOR_SESSIONACCOUNT_NEW
#define UNIFFI_FFIDEF_UNIFFI_CONTROLLER_UNIFFI_CHECKSUM_CONSTRUCTOR_SESSIONACCOUNT_NEW
uint16_t uniffi_controller_uniffi_checksum_constructor_sessionaccount_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_UNIFFI_CONTRACT_VERSION
#define UNIFFI_FFIDEF_FFI_CONTROLLER_UNIFFI_UNIFFI_CONTRACT_VERSION
uint32_t ffi_controller_uniffi_uniffi_contract_version(void
    
);
#endif


